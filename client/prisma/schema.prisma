// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// @id , @@id 모두 : 기본키 지정
// @unique, @@unique: 유니크한 값
//cuid. uuid, cuid/uuid 사양에 따라 고유한 식별자 생성

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  // 다른 테이블과 관계 생성
  //fields 이 테이블의 참조할 값이 userId가 
  //user 테이블의 id 와 같아야된다. 
  //onDelete : cascade는 관계가 매칭된 다른 테이블과 
  //만약 데이터가 삭제시 관계가 있는 데이터라면 삭제되게끔 설정
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  //이테이블의 userId가 user테이블의 id와 같아야 된다!
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id             String    @id @default(cuid())
  name           String?
  email          String?   @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  accounts       Account[]
  sessions       Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}
